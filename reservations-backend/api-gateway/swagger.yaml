openapi: 3.0.0
info:
  title: Hotel Reservation System API
  description: Microservices-based hotel reservation system API Gateway
  version: 1.0.0
  contact:
    name: API Support
    email: support@reservations.com

servers:
  - url: http://localhost:3000/api
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
        errors:
          type: array
          items:
            type: string

    User:
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
          enum: [CUSTOMER, HOTEL_ADMIN, SYSTEM_ADMIN]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Hotel:
      type: object
      properties:
        hotelId:
          type: string
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
        averageRating:
          type: number
        address:
          $ref: '#/components/schemas/Address'
        amenities:
          type: array
          items:
            type: string
        photos:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipCode:
          type: string

    Room:
      type: object
      properties:
        roomId:
          type: string
        roomNumber:
          type: string
        roomType:
          type: string
        capacity:
          type: integer
        price:
          type: number
        currency:
          type: string
        isAvailable:
          type: boolean
        images:
          type: array
          items:
            type: string
        amenities:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    HotelStatistics:
      type: object
      properties:
        totalRooms:
          type: integer
        occupiedRooms:
          type: integer
        occupancyRate:
          type: number
        totalReservations:
          type: integer
        totalRevenue:
          type: number
        averageRating:
          type: number
        totalReviews:
          type: integer

    PaginatedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer

    ReservationStatus:
      type: string
      enum: [PENDING, CONFIRMED, CANCELLED, COMPLETED, REJECTED]

    Reservation:
      type: object
      properties:
        reservationId:
          type: string
        customerId:
          type: string
        hotelId:
          type: string
        roomId:
          type: string
        checkInDate:
          type: string
          format: date
        checkOutDate:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/ReservationStatus'
        guestCount:
          type: integer
          minimum: 1
        totalPrice:
          type: object
          properties:
            amount:
              type: number
              minimum: 0
            currency:
              type: string
              default: USD
        specialRequests:
          type: string
          nullable: true
        cancellationReason:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                phoneNumber:
                  type: string
                role:
                  type: string
                  enum: [CUSTOMER, HOTEL_ADMIN]
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'

  /hotels:
    get:
      tags:
        - Hotels
      summary: Get all hotels
      security: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [created_at, average_rating, name]
            default: created_at
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Hotels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Hotels
      summary: Create a new hotel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - address
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    country:
                      type: string
                    zipCode:
                      type: string
                amenities:
                  type: array
                  items:
                    type: string
                photos:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Hotel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/search:
    get:
      tags:
        - Hotels
      summary: Search hotels by name, description, or location
      security: []
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: Search query
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Hotels search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/my-hotels:
    get:
      tags:
        - Hotels
      summary: Get hotels owned by current user
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [created_at, average_rating, name]
            default: created_at
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: User's hotels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/owner/{ownerId}:
    get:
      tags:
        - Hotels
      summary: Get hotels by owner ID
      security: []
      parameters:
        - in: path
          name: ownerId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Hotels by owner retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/{hotelId}:
    get:
      tags:
        - Hotels
      summary: Get hotel by ID
      security: []
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    put:
      tags:
        - Hotels
      summary: Update hotel
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: object
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    country:
                      type: string
                    zipCode:
                      type: string
                amenities:
                  type: array
                  items:
                    type: string
                photos:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Hotel updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Hotels
      summary: Delete hotel
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/{hotelId}/rooms:
    get:
      tags:
        - Hotels
      summary: Get hotel rooms
      security: []
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: available
          schema:
            type: boolean
          description: Filter by availability
      responses:
        '200':
          description: Hotel rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/{hotelId}/reservations:
    get:
      tags:
        - Hotels
      summary: Get hotel reservations
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: status
          schema:
            type: string
            enum: [PENDING, CONFIRMED, CANCELLED, COMPLETED]
      responses:
        '200':
          description: Hotel reservations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/{hotelId}/statistics:
    get:
      tags:
        - Hotels
      summary: Get hotel statistics
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Hotel statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /hotels/{hotelId}/status:
    patch:
      tags:
        - Hotels
      summary: Update hotel status
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [ACTIVE, INACTIVE, SUSPENDED]
      responses:
        '200':
          description: Hotel status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /rooms:
    get:
      tags:
        - Rooms
      summary: Get all rooms with filtering and pagination
      security: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: hotelId
          schema:
            type: string
          description: Filter by hotel ID
        - in: query
          name: type
          schema:
            type: string
            enum: [SINGLE, DOUBLE, TWIN, SUITE, DELUXE]
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
        - in: query
          name: available
          schema:
            type: boolean
      responses:
        '200':
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Rooms
      summary: Create a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hotelId
                - roomNumber
                - roomType
                - capacity
                - price
              properties:
                hotelId:
                  type: string
                roomNumber:
                  type: string
                roomType:
                  type: string
                  enum: [SINGLE, DOUBLE, TWIN, SUITE, DELUXE]
                capacity:
                  type: integer
                  minimum: 1
                price:
                  type: number
                  minimum: 0
                currency:
                  type: string
                  default: USD
                amenities:
                  type: array
                  items:
                    type: string
                images:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Room created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /rooms/types:
    get:
      tags:
        - Rooms
      summary: Get available room types
      security: []
      responses:
        '200':
          description: Room types retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
                          enum: [SINGLE, DOUBLE, TWIN, SUITE, DELUXE]

  /rooms/search:
    get:
      tags:
        - Rooms
      summary: Search available rooms across all hotels
      security: []
      parameters:
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: checkIn
          schema:
            type: string
            format: date
        - in: query
          name: checkOut
          schema:
            type: string
            format: date
        - in: query
          name: type
          schema:
            type: string
            enum: [SINGLE, DOUBLE, TWIN, SUITE, DELUXE]
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
        - in: query
          name: guests
          schema:
            type: integer
            minimum: 1
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Room search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /rooms/{roomId}:
    get:
      tags:
        - Rooms
      summary: Get room by ID
      security: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Room'

    put:
      tags:
        - Rooms
      summary: Update room
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomNumber:
                  type: string
                roomType:
                  type: string
                  enum: [SINGLE, DOUBLE, TWIN, SUITE, DELUXE]
                capacity:
                  type: integer
                  minimum: 1
                price:
                  type: number
                  minimum: 0
                currency:
                  type: string
                amenities:
                  type: array
                  items:
                    type: string
                images:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Room updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    delete:
      tags:
        - Rooms
      summary: Delete room
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /rooms/{roomId}/availability:
    get:
      tags:
        - Rooms
      summary: Get room availability for specific dates
      security: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
        - in: query
          name: checkIn
          schema:
            type: string
            format: date
        - in: query
          name: checkOut
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Room availability retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          roomId:
                            type: string
                          isAvailable:
                            type: boolean
                          status:
                            type: string
                            enum: [AVAILABLE, UNAVAILABLE]
                          checkInDate:
                            type: string
                            format: date-time
                          checkOutDate:
                            type: string
                            format: date-time

    put:
      tags:
        - Rooms
      summary: Update room availability status
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isAvailable
              properties:
                isAvailable:
                  type: boolean
      responses:
        '200':
          description: Room availability updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /reservations:
    get:
      tags:
        - Reservations
      summary: Get all reservations with filtering
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/ReservationStatus'
        - in: query
          name: hotelId
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: checkInDate
          schema:
            type: string
            format: date
        - in: query
          name: checkOutDate
          schema:
            type: string
            format: date
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [created_at, check_in_date, total_price]
            default: created_at
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Reservations retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedResponse'

    post:
      tags:
        - Reservations
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hotelId
                - roomId
                - checkInDate
                - checkOutDate
                - guestCount
              properties:
                hotelId:
                  type: string
                roomId:
                  type: string
                checkInDate:
                  type: string
                  format: date
                checkOutDate:
                  type: string
                  format: date
                guestCount:
                  type: integer
                  minimum: 1
                specialRequests:
                  type: string
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

  /reservations/pending:
    get:
      tags:
        - Reservations
      summary: Get pending reservations
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: hotelId
          schema:
            type: string
      responses:
        '200':
          description: Pending reservations retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedResponse'

  /reservations/history:
    get:
      tags:
        - Reservations
      summary: Get reservation history
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Reservation history retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedResponse'

  /reservations/user/{userId}:
    get:
      tags:
        - Reservations
      summary: Get reservations by user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/ReservationStatus'
      responses:
        '200':
          description: User reservations retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedResponse'

  /reservations/hotel/{hotelId}:
    get:
      tags:
        - Reservations
      summary: Get reservations by hotel
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/ReservationStatus'
        - in: query
          name: checkInDate
          schema:
            type: string
            format: date
        - in: query
          name: checkOutDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Hotel reservations retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PaginatedResponse'

  /reservations/{id}:
    get:
      tags:
        - Reservations
      summary: Get reservation by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reservation retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

    put:
      tags:
        - Reservations
      summary: Update reservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkInDate:
                  type: string
                  format: date
                checkOutDate:
                  type: string
                  format: date
                guestCount:
                  type: integer
                  minimum: 1
                specialRequests:
                  type: string
      responses:
        '200':
          description: Reservation updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

    delete:
      tags:
        - Reservations
      summary: Delete reservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reservation deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /reservations/{id}/status:
    put:
      tags:
        - Reservations
      summary: Update reservation status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: '#/components/schemas/ReservationStatus'
                reason:
                  type: string
                  description: Required for cancellation or rejection
      responses:
        '200':
          description: Reservation status updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

  /reservations/{id}/confirm:
    post:
      tags:
        - Reservations
      summary: Confirm reservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Optional confirmation notes
      responses:
        '200':
          description: Reservation confirmed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

  /reservations/{id}/reject:
    post:
      tags:
        - Reservations
      summary: Reject reservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: Reason for rejection
      responses:
        '200':
          description: Reservation rejected successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

  /reservations/{id}/cancel:
    post:
      tags:
        - Reservations
      summary: Cancel reservation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: Reason for cancellation
      responses:
        '200':
          description: Reservation cancelled successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Reservation'

  /reviews:
    get:
      tags:
        - Reviews
      summary: Get reviews
      security: []
      parameters:
        - in: query
          name: hotelId
          schema:
            type: string
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      tags:
        - Reviews
      summary: Create a new review
      responses:
        '201':
          description: Review created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /notifications:
    get:
      tags:
        - Notifications
      summary: Get user notifications
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /payments:
    post:
      tags:
        - Payments
      summary: Process payment
      responses:
        '201':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /reports:
    post:
      tags:
        - Reports
      summary: Generate report
      responses:
        '201':
          description: Report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'